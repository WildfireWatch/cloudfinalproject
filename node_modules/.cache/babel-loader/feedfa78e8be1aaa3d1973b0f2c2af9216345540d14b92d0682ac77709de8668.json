{"ast":null,"code":"var _jsxFileName = \"/Users/chrissaccount/Documents/GitHub/motivational-quotes-generator/src/components/App.js\";\nimport React from 'react';\nimport Quotes from './quotes.js';\nimport NextQuote from './nextQuote.js';\nimport '../styles/App.css';\nimport QuotesData from \"../data/quotes.json\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeCallback = () => {\n      let value = Math.floor(Math.random() * QuotesData.length);\n      if (value === this.state.quoteNum) {\n        value = Math.floor(Math.random() * QuotesData.length);\n      } else {\n        this.setState({\n          quoteNum: value\n        });\n      }\n    };\n    this.state = {\n      quoteNum: Math.floor(Math.random() * QuotesData.length)\n    };\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"MQG\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"QuoteID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"#\", QuotesData[this.state.quoteNum].ID)), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Quotes, {\n      quote: QuotesData[this.state.quoteNum].quote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NextQuote, {\n      changeCallback: this.changeCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Quotes","NextQuote","QuotesData","App","Component","constructor","props","changeCallback","value","Math","floor","random","length","state","quoteNum","setState","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ID","quote"],"sources":["/Users/chrissaccount/Documents/GitHub/motivational-quotes-generator/src/components/App.js"],"sourcesContent":["import React from 'react';\nimport Quotes from './quotes.js'\nimport NextQuote from './nextQuote.js'\nimport '../styles/App.css';\nimport QuotesData from \"../data/quotes.json\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteNum: Math.floor(Math.random()*QuotesData.length)\n    }\n  }\n\n  changeCallback = () => {\n\n    let value = Math.floor(Math.random()*QuotesData.length);\n\n    if (value === this.state.quoteNum) {\n      value = Math.floor(Math.random()*QuotesData.length);\n    } else {\n      this.setState({\n        quoteNum: value\n      })\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h1 className=\"logo\">MQG</h1>\n            <h6 className=\"QuoteID\">#{QuotesData[this.state.quoteNum].ID}</h6>\n        </header>\n        <main>\n          <Quotes quote={QuotesData[this.state.quoteNum].quote}/>\n          <NextQuote changeCallback={this.changeCallback}/>\n        </main>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAO,mBAAmB;AAC1B,OAAOC,UAAU,MAAM,qBAAqB;AAE5C,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,cAAc,GAAG,MAAM;MAErB,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAACT,UAAU,CAACU,MAAM,CAAC;MAEvD,IAAIJ,KAAK,KAAK,IAAI,CAACK,KAAK,CAACC,QAAQ,EAAE;QACjCN,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAACT,UAAU,CAACU,MAAM,CAAC;MACrD,CAAC,MAAM;QACL,IAAI,CAACG,QAAQ,CAAC;UACZD,QAAQ,EAAEN;QACZ,CAAC,CAAC;MACJ;IAEF,CAAC;IAjBC,IAAI,CAACK,KAAK,GAAG;MACXC,QAAQ,EAAEL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAACT,UAAU,CAACU,MAAM;IACtD,CAAC;EACH;EAgBAI,MAAMA,CAAA,EAAG;IACP,oBACEjB,KAAA,CAAAkB,aAAA;MAAKC,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClBzB,KAAA,CAAAkB,aAAA;MAAQC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BzB,KAAA,CAAAkB,aAAA;MAAIC,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,KAAG,CAAK,eAC7BzB,KAAA,CAAAkB,aAAA;MAAIC,SAAS,EAAC,SAAS;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,GAAC,EAACtB,UAAU,CAAC,IAAI,CAACW,KAAK,CAACC,QAAQ,CAAC,CAACW,EAAE,CAAM,CAC7D,eACT1B,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEzB,KAAA,CAAAkB,aAAA,CAACjB,MAAM;MAAC0B,KAAK,EAAExB,UAAU,CAAC,IAAI,CAACW,KAAK,CAACC,QAAQ,CAAC,CAACY,KAAM;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAE,eACvDzB,KAAA,CAAAkB,aAAA,CAAChB,SAAS;MAACM,cAAc,EAAE,IAAI,CAACA,cAAe;MAAAY,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAE,CAC5C,CAEH;EAEV;AACF;AAEA,eAAerB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}