{"ast":null,"code":"var _jsxFileName = \"/Users/chrissaccount/Documents/GitHub/motivational-quotes-generator/src/components/nextQuote.js\";\nimport React from 'react';\nimport '../styles/nextQuote.css';\nclass NextQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.qouteButtonHandle = () => {\n      console.log(`button clicked`);\n      this.props.changeCallback();\n      this.setState({\n        timer: 10\n      });\n    };\n    this.state = {\n      timer: 10\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log(`There are ${this.state.timer} seconds remaining.`);\n      if (this.state.timer > 0) {\n        this.setState({\n          timer: this.state.timer - 1\n        });\n      } else {\n        this.props.changeCallback();\n        this.setState({\n          timer: 10\n        });\n        console.log(`New quote incoming!`);\n      }\n    }, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Next Quote in: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }\n    }, this.state.timer)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Or,\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"nextQuoteButton\",\n      onClick: () => this.qouteButtonHandle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Next Quote...\"));\n  }\n}\nexport default NextQuote;","map":{"version":3,"names":["React","NextQuote","Component","constructor","props","qouteButtonHandle","console","log","changeCallback","setState","timer","state","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/chrissaccount/Documents/GitHub/motivational-quotes-generator/src/components/nextQuote.js"],"sourcesContent":["import React from 'react'\nimport '../styles/nextQuote.css'\n\nclass NextQuote extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timer: 10\n        }\n    }\n\n    qouteButtonHandle = () => {\n        console.log(`button clicked`)\n        this.props.changeCallback()\n        this.setState({\n            timer: 10\n        })\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n\n            console.log(`There are ${this.state.timer} seconds remaining.`)\n\n            if (this.state.timer > 0)   {\n                this.setState({\n                    timer: this.state.timer-1\n                })\n            } else {\n\n                this.props.changeCallback()\n    \n                this.setState({\n                    timer: 10\n                })\n                console.log(`New quote incoming!`)\n            }\n        }, 1000) \n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <p>Next Quote in: <strong>{this.state.timer}</strong></p>\n                <p>Or,</p>\n                <button className=\"nextQuoteButton\" onClick={(() => this.qouteButtonHandle())}>Next Quote...</button>\n            </div>\n        )\n    }\n}\n\nexport default NextQuote"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAEhC,MAAMC,SAAS,SAASD,KAAK,CAACE,SAAS,CAAC;EACpCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMjBC,iBAAiB,GAAG,MAAM;MACtBC,OAAO,CAACC,GAAG,CAAE,gBAAe,CAAC;MAC7B,IAAI,CAACH,KAAK,CAACI,cAAc,EAAE;MAC3B,IAAI,CAACC,QAAQ,CAAC;QACVC,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC;IAXG,IAAI,CAACC,KAAK,GAAG;MACTD,KAAK,EAAE;IACX,CAAC;EACL;EAUAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAE9BR,OAAO,CAACC,GAAG,CAAE,aAAY,IAAI,CAACI,KAAK,CAACD,KAAM,qBAAoB,CAAC;MAE/D,IAAI,IAAI,CAACC,KAAK,CAACD,KAAK,GAAG,CAAC,EAAI;QACxB,IAAI,CAACD,QAAQ,CAAC;UACVC,KAAK,EAAE,IAAI,CAACC,KAAK,CAACD,KAAK,GAAC;QAC5B,CAAC,CAAC;MACN,CAAC,MAAM;QAEH,IAAI,CAACN,KAAK,CAACI,cAAc,EAAE;QAE3B,IAAI,CAACC,QAAQ,CAAC;UACVC,KAAK,EAAE;QACX,CAAC,CAAC;QACFJ,OAAO,CAACC,GAAG,CAAE,qBAAoB,CAAC;MACtC;IACJ,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAQ,oBAAoBA,CAAA,EAAG;IACnBC,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;EAChC;EAEAI,MAAMA,CAAA,EAAG;IAEL,oBACIjB,KAAA,CAAAkB,aAAA;MAAKC,SAAS,EAAC,WAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACtBzB,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,iBAAe,eAAAzB,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAS,IAAI,CAACd,KAAK,CAACD,KAAK,CAAU,CAAI,eACzDV,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,KAAG,CAAI,eACVzB,KAAA,CAAAkB,aAAA;MAAQC,SAAS,EAAC,iBAAiB;MAACO,OAAO,EAAGA,CAAA,KAAM,IAAI,CAACrB,iBAAiB,EAAI;MAAAe,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,eAAa,CAAS,CACnG;EAEd;AACJ;AAEA,eAAexB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}